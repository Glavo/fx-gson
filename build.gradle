// bintray plugin is used to upload artifacts to a bintray repo
plugins { id "com.jfrog.bintray" version "1.6" }

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'maven-publish'

group = 'org.hildan.fxgson'
version = '3.1.0'
description = 'A set of type adapters for Google Gson to make JavaFX properties serialization more natural.'
ext.labels = ['json', 'gson', 'javafx', 'property']

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.code.gson:gson:2.7'
    compile 'org.jetbrains:annotations:15.0'
    testCompile 'junit:junit:4.+'
}

checkstyle {
    maxWarnings = 0
    toolVersion = '7.6'
}

def getPropOrEnv = { String prop, String envVar, String defaultValue = null ->
    if (project.hasProperty(prop)) {
        return project.property(prop)
    }
    return System.getenv(envVar) ?: defaultValue
}

ext {
    githubUser = getPropOrEnv('githubUser', 'GITHUB_USER')
    githubRepoName = project.name
    githubSlug = "$githubUser/$githubRepoName"
    githubRepoUrl = "https://github.com/$githubSlug"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            // additional jars
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                asNode().appendNode('name', project.name)
                asNode().appendNode('description', project.description)
                asNode().appendNode('url', githubRepoUrl)

                Object licenses = asNode().appendNode('licenses')
                Object license = licenses.appendNode('license')
                license.appendNode('name', 'The MIT License')
                license.appendNode('url', 'https://opensource.org/licenses/MIT')

                Object scm = asNode().appendNode('scm')
                scm.appendNode('url', githubRepoUrl)
                scm.appendNode('connection', 'scm:git:' + githubRepoUrl + '.git')
                scm.appendNode('developerConnection', 'scm:git:git@github.com:' + githubSlug + '.git')

                Object developers = asNode().appendNode('developers')
                Object developer = developers.appendNode('developer')
                developer.appendNode('name', 'Joffrey Bion')
                developer.appendNode('email', 'joffrey.bion@gmail.com')
            }
        }
    }
}

bintray {
    user = getPropOrEnv('bintrayUser', 'BINTRAY_USER')
    key = getPropOrEnv('bintrayApiKey', 'BINTRAY_KEY')
    publications = ['maven']
    publish = true // the version should be auto published after an upload

    pkg {
        repo = getPropOrEnv('bintrayRepoLibs', 'BINTRAY_REPO_LIBS')
        name = project.name
        desc = project.description
        labels = project.labels
        licenses = ['MIT']

        websiteUrl = githubRepoUrl
        issueTrackerUrl = githubRepoUrl + '/issues'
        vcsUrl = githubRepoUrl + '.git'
        githubRepo = githubSlug

        version {
            desc = project.description
            vcsTag = 'v' + project.version
            gpg { sign = true }
        }
    }
}

apply from: 'gradle/scripts/release.gradle'

bintrayUpload.dependsOn(build)
release.dependsOn(bintrayUpload)
