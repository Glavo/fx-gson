// bintray plugin is used to upload artifacts to a bintray repo
plugins {
    id "com.jfrog.bintray" version "1.8.4"
    id "org.hildan.github.changelog" version "0.8.0"
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

group = 'org.hildan.fxgson'
version = '3.1.2'
description = 'A set of type adapters for Google Gson to make JavaFX properties serialization more natural.'
ext.labels = ['json', 'gson', 'javafx', 'property']
ext.licenses = ['MIT']

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    checkstyleConfig
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'org.jetbrains:annotations:15.0'
    testCompile 'junit:junit:4.+'
    checkstyleConfig 'org.hildan.checkstyle:checkstyle-config:2.1.0'
}

checkstyle {
    maxWarnings = 0
    toolVersion = '8.2'
    config = resources.text.fromArchiveEntry(configurations.checkstyleConfig, "checkstyle.xml")
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1.0
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification

def getPropOrEnv = { String prop, String envVar, String defaultValue = null ->
    if (project.hasProperty(prop)) {
        return project.property(prop)
    }
    return System.getenv(envVar) ?: defaultValue
}

ext {
    githubUser = getPropOrEnv('githubUser', 'GITHUB_USER')
    githubRepoName = project.name
    githubSlug = "$githubUser/$githubRepoName"
    githubRepoUrl = "https://github.com/$githubSlug"
    ossrhUserToken = getPropOrEnv('ossrhUserToken', 'OSSRH_USER_TOKEN')
    ossrhKey = getPropOrEnv('ossrhKey', 'OSSRH_KEY')
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

def pomConfig = {
    scm {
        url githubRepoUrl
        connection 'scm:git:' + githubRepoUrl + '.git'
        developerConnection 'scm:git:git@github.com:' + githubSlug + '.git'
    }
    licenses {
        license {
            name 'The MIT License'
            url 'https://opensource.org/licenses/MIT'
        }
    }
    developers {
        developer {
            name 'Joffrey Bion'
            email 'joffrey.bion@gmail.com'
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                def root = asNode()
                root.appendNode('name', project.name)
                root.appendNode('description', project.description)
                root.appendNode('url', githubRepoUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = getPropOrEnv('bintrayUser', 'BINTRAY_USER')
    key = getPropOrEnv('bintrayApiKey', 'BINTRAY_KEY')
    publications = ['maven']
    publish = true

    pkg {
        repo = getPropOrEnv('bintrayRepoLibs', 'BINTRAY_REPO_LIBS')
        name = project.name
        desc = project.description
        labels = project.labels ?: [project.name]
        licenses = project.licenses ?: []

        websiteUrl = githubRepoUrl
        issueTrackerUrl = githubRepoUrl + '/issues'
        vcsUrl = githubRepoUrl + '.git'
        githubRepo = githubSlug

        version {
            desc = project.description
            vcsTag = 'v' + project.version
            gpg { sign = true }
            mavenCentralSync {
                sync = true
                user = ossrhUserToken
                password = ossrhKey
            }
        }
    }
}

apply from: 'gradle/scripts/release.gradle'

bintrayUpload.dependsOn(build)
release.dependsOn(bintrayUpload)

changelog {
    sinceTag = "v1.2"
    releaseUrlTemplate = "https://bintray.com/joffrey-bion/maven/fx-gson/%s"
    releaseUrlTagTransform = { it.substring(1) }
    customTagByIssueNumber = [12: "v3.1.0"]
}
